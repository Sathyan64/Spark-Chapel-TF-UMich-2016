n
beta1 <- corr(x,y)*sd(y)/sd(x)
beta1 <- cor(x,y)*sd(y)/sd(x)
beta1
lm(y~x)
fit <- lm(y~x)
summary(fit)
sigma <- sqrt(var(y))
sigma
x-mean(x)
(x-mean(x))**2
sum((x-mean(x))**2)
varbeta1 <- sigma**2/(sum((x-mean(x))**2))
sdbeta1 <- sqrt(varbeta1)
sdbeta
sdbeta1
summary(fit)
varbeta1 <- var(y)/(sum((x-mean(x))**2))
varbeta1
sqrt(varbeta1)
beta1
cor(y,x)
cor(y,x)*sd(y)/sd(x)
beta1 <- cor(y,x)*sd(y)/sd(x)
beta0 <- mean(y-beta1*x)
beta1
beta0
summary(fit)
beta1
beta0
cor(x,y)*sd(x)/sd(y)
cor(x,y)*sd(y)/sd(x)
summary(fit)
varbeta1
sqrt(varbeta1)
varbeta1 <- var(y)/(sum((x-mean(x))**2))
sqrt(varbeta1)
sqrt(varbeta1)*sqrt(8/7)
sqrt(varbeta1)*sqrt(7/8)
sqrt(varbeta1)*sqrt(7/9)
e <- y-beta1*x-beta0
sigma <- sqrt(sum(e**2)/(n-2))
varbeta1 <- sigma**2/sum((x-mean(x))**2)
varbeta1
sqrt(varbeta1)
tbeta1 <- beta1/sqrt(beta1)
tbeta1 <- beta1/sqrt(varbeta1)
tbeta1
2*pt(abs(tbeta1),df=n-2,lower.tail=FALSE)
sigma
data(mtcars)
mtcars
str(mtcars)
fit <- lm(mpg~weight,data=mtcars)
fit <- lm(mpg~wt,data=mtcars)
summary(fit)
?qt
n <- nrow(mtcars)
qt(.975,n-2)
qt(.975,n-2,lower.tail=FALSE)
qt(.975,n-2)*0.5591
-5.3445-qt(.975,n-2)*0.5591
mean(mpg$wt)
mean(mtcars$wt)
newdata <- data.frame(wt=c(mean(mtcars$wt)))
predict(fit,newdata)
predict(fit,newdata,limits='confidence')
a <- predict(fit,newdata,limits='confidence')
str(a)
?predict.lm
a <- predict(fit,newdata,interval='confidence')
str(a)
a[1]
a[2]
a[3]
round(a[2],3)
str(fit)
nrow(mtcars)
fit$residuals
sigma <- sqrt(sum(fit$residuals**2)/(nrow(mtcars)-2))
sigma
n
sigma*sqrt(1 + 1/n)
predse <- sigma*sqrt(1 + 1/n)
summary(fit)
pred <- 37.2851 +  -5.3445*mean(mtcars$wt)
pred
predse
qt(.975,n-2)
qt(.975,n-2)*predse
pred - qt(.975,n-2)*predse
a
fit$residuals
sd(fit$residuals)
beta0
beta1
summary(fit)
fit
str(fit)
fit$model
str(fit)
fit$coefficients
fit$coefficients[2]
fit$coefficients[2]*mtdata$wt
fit$coefficients[2]*mtcars$wt
fit$coefficients[2]*mtcars$wt + fit$coefficients[1]
fit$coefficients[2]*mtcars$wt + fit$coefficients[1] - mtcars$mpg
e <- (fit$coefficients[2]*mtcars$wt + fit$coefficients[1] - mtcars$mpg)
sum(e**2)/(n-2)
se <- sqrt(sum(e**2)/(n-2))
se
summary(fit)
qt(.975,n-2)
qt(.975,1000)
qt(.975,n-2)
qt(.975,n-2)*3.046
-qt(.975,n-2)*3.046
fit$coefficients[2]*mean(mtcars$wt)+fit$coefficients[1]-qt(.975,n-2)*3.046
predict(fit,newdata,interval='prediction')
predse
sigma
sigma*sqrt(1/n)
fit$coefficients[2]*mean(mtcars$wt)+fit$coefficients[1]-qt(.975,n-2)*sigma*sqrt(1/n)
help(mtcars)
newdata <- data.frame(wt=c(3))
predict(fit,newdata)
predict(fit,newdata,interval='predict')
fit$coefficients[2]*3+fit$coefficients[1]-qt(.975,n-2)*3.046
fit$coefficients[2]*3+fit$coefficients[1]+qt(.975,n-2)*3.046
fit$coefficients[2]*3+fit$coefficients[1]+qt(.975,n-2)*3.093
summary(fit)
qt(.975,n-2)*0.5591+-5.3445
-qt(.975,n-2)*0.5591+-5.3445
2*(-qt(.975,n-2)*0.5591+-5.3445)
mtdata$mpg - mean(mtdata$mpg)
mtcars$mpg - mean(mtcars$mpg)
sum((mtcars$mpg - mean(mtcars$mpg))**2)
sum(fit$residual**2)/sum((mtcars$mpg - mean(mtcars$mpg))**2)
sum(fit$residual)
fit <- lm(mpg ~ wt - 1,data=mtcars)
sum(fit$residual)
summary(fit)
?read.delim
df <- read.delim('/Users/ljdursi/tmp/foo.txt',header=TRUE)
df
str[df]
str(df)
df[0]
df[1]
df <- read.table('/Users/ljdursi/tmp/foo.txt',header=TRUE)
df
df[0]
df[1]
df[2]
df[3]
df[4]
str(df)
df <- read.table('/Users/ljdursi/tmp/example.txt',header=TRUE)
str(df)
df[12,:]
df[12,]
df[-'probes',:]
df[:,-'probes']
df[,-'probes']
<- df[,-c('probes')]
df2<- df[,-c('probes')]
df2<- df[,-c(1)]
df2
df2[1:5,]
stf(df2)
str(df2)
as.character(df[,1])
?gsub
gsub("_.*","",as.character(df[,1]))
as.numeric(gsub("_.*","",as.character(df[,1])))
range(df1)
range(df2)
range(df[,-c(1)])
snvs = read.table("/Users/ljdursi/Desktop/tmp/snvscores.tbl",header=TRUE)
snvs = read.table("/Users/ljdursi/Desktop/tmp/snvscores.tbl",header=TRUE)
library(ggplot2)
precisions = snvs[scoretype==precision]
precisions = snvs[scoretype==precision,]
precisions = snvs[snvs$scoretype==precision,]
precisions = snvs[snvs$scoretype=="precision",]
p <- ggplot(precisions, aes(caller, score)) + geom_boxplot()
p
f1s = snvs[snvs$scoretype=="f1",]
p <- ggplot(f1s, aes(caller, score)) + geom_boxplot()
p
p <- ggplot(f1s, aes(caller, score)) + geom_boxplot(aes(fill=caller))
p
ggplot(f1s, aes(x=caller, y=score)) + geom_boxplot(aes(fill=caller)) + facet_grid(scoretype ~ .)
ggplot(snvs, aes(x=caller, y=score)) + geom_boxplot(aes(fill=caller)) + facet_grid(scoretype ~ .)
ggplot(snvs, aes(x=caller, y=score)) + geom_boxplot(aes(fill=caller)) + facet_grid(scoretype ~ .) + ggtitle("SNV imputed scores")
indels = read.table("/Users/ljdursi/Desktop/tmp/indelscores.tbl",header=TRUE)
ggplot(indelss, aes(x=caller, y=score)) + geom_boxplot(aes(fill=caller)) + facet_grid(scoretype ~ .) + ggtitle("INDEL imputed scores")
ggplot(indels, aes(x=caller, y=score)) + geom_boxplot(aes(fill=caller)) + facet_grid(scoretype ~ .) + ggtitle("INDEL imputed scores")
ggplot(indels, aes(x=caller, y=score)) + geom_boxplot(aes(fill=caller)) + facet_grid(scoretype ~ .) + ggtitle("INDEL imputed scores")
ggplot(snvs, aes(x=caller, y=score)) + geom_boxplot(aes(fill=caller)) + facet_grid(scoretype ~ .) + ggtitle("SNV imputed scores")
sessionInfo()
A=c(2, -1, 0, 3, 5)
mean(A)
sd(A)
z <- (A - mean(A))/sd(A)
mean(z)
sd(z)
z
source('~/Desktop/io-perf-data/plots.R')
data
data['V1']
data['V4']
data[:,'V4']
str(data)
data$V4
source('~/Desktop/io-perf-data/plots.R')
print(p)
View(`f1s`)
source('~/Desktop/io-perf-data/plots.R')
print(p)
p <- qplot(data$V1,data$V4)
print(p)
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
print(qplot(data$V1,data$V4))
print(qplot(data$V1,data$V4)+stat_smooth(geom = "point"))
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
sdata
sdata['TYPE'] <- 'seek'
sdata
data.frame()
?rbind
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
View(data)
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
View(data)
View(data)
str(data$Type)
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
View(data)
View(data)
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
levels(data$Type)
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/io-perf-data/plots.R')
source('~/Desktop/seek-vs-sequential/plots.R')
source('~/Desktop/seek-vs-sequential/plots.R')
source('~/Desktop/seek-vs-sequential/plots.R')
source('~/Desktop/seek-vs-sequential/plots.R')
source('~/Desktop/seek-vs-sequential/plots.R')
source('~/Desktop/seek-vs-sequential/plots.R')
library(snow)
makeCluster(type="SOCK",2)
x <- runif(10000)
y <- x*x
library(ggplot)
library(ggplot2)
df <- data.frame(y=y,x=x)
ggplot(df) + geom_dens(aes(x=y, y=..count..))
ggplot(df) + geom_density(aes(x=y, y=..count..))
df <- data.frame(y=y,x=x,z=x+x)
ggplot(df) + geom_density(aes(x=z, y=..count..))
green <- read.csv('~/Desktop/eci-green.csv')
grey <- read.csv('~/Desktop/eci-grey.csv')
colnames(green) <- c("consolidated","SD")
colnames(grey) <- c("consolidated","SD")
green$status <- PASS
green$status <- TRUE
grey$status <- FALSE
all <- rbind(green,grey)
ggplot(all) + geom_point(aes(x=consolidated,y=SD,color=status))
all <- all[all$SD > -1,]
ggplot(all) + geom_point(aes(x=consolidated,y=SD,color=status))
write.csv(all,'~/Desktop/ECI-CFI-P.csv')
ggplot(all) + geom_point(aes(x=consolidated,y=SD,color=status))
ggplot(all) + geom_density(aes(x=consolidated))
all <- all[all$consolidated < 105,]
ggplot(all) + geom_density(aes(x=consolidated))
ggplot(all) + geom_point(aes(x=consolidated,y=SD,color=status))
all <- all[all$consolidated < 102,]
ggplot(all) + geom_point(aes(x=consolidated,y=SD,color=status))
nrow(all)
?runif
random.scores <- matrix(runif(259*5, max=5),ncol=5)
random.scores
synthetic.sds <- apply(random.scores, 2, sd)/5*100
head(synthetic.sds)
synthetic.means <- rowSums(random.scores)/5
head(synthetic.means)
?order
head(order(synthetic.means))
synthetic <- data.frame(SD=synthetic.sds, consolidated=order(synthetic.means)*100/nrow(all))
synthetic <- data.frame(SD=synthetic.sds, consolidated=order(synthetic.means)*100/nrow(all))
str(synthetic.means)
str(order(synthetic.means))
str(order(synthetic.means)*100)
str(order(synthetic.means)*100/nrow(all))
str(synthetic.sds)
synthetic.sds <- apply(random.scores, 1, sd)/5*100
str(synthetic.sds)
synthetic <- data.frame(SD=synthetic.sds, consolidated=order(synthetic.means)*100/nrow(all))
ggplot(all) + geom_point(aes(x=consolidated,y=SD,color=status))
ggplot(synthetic) + geom_point(aes(x=consolidated,y=SD,color=status))
ggplot(synthetic) + geom_point(aes(x=consolidated,y=SD))
min(synthetic.means)
synthetic <- data.frame(SD=synthetic.sds, means=synthetic.means, consolidated=order(synthetic.means)*100/nrow(all))
ggplot(synthetic) + geom_point(aes(x=means/5*100,y=SD))
ggplot(all) + geom_point(aes(x=consolidated,y=SD,color=status))
ggplot(synthetic) + geom_point(aes(x=means/5*100,y=SD)) + xlim(0,100) + ylim(0,50)
ggplot(all) + geom_point(aes(x=means/5*100,y=SD)) + xlim(0,100) + ylim(0,50)
ggplot(all) + geom_point(aes(x=consolidated,y=SD)) + xlim(0,100) + ylim(0,50)
synthetic$scaled.means <- (synthetic$means - min(synthetic$means))/(max(synthetic$means)-min(synthetic$means))
ggplot(all) + geom_point(aes(x=consolidated,y=SD)) + xlim(0,100) + ylim(0,50)
ggplot(synthetic) + geom_point(aes(x=scaled.means,y=SD)) + xlim(0,100) + ylim(0,50)
synthetic$scaled.means <- (synthetic$means - min(synthetic$means))/(max(synthetic$means)-min(synthetic$means))*100
ggplot(synthetic) + geom_point(aes(x=scaled.means,y=SD)) + xlim(0,100) + ylim(0,50)
ggplot(all) + geom_point(aes(x=consolidated,y=SD)) + xlim(0,100) + ylim(0,50)
ggplot(synthetic) + geom_point(aes(x=scaled.means,y=SD)) + xlim(0,100) + ylim(0,50)
ggplot(all) + geom_point(aes(x=consolidated,y=SD)) + xlim(0,100) + ylim(0,50)
ggplot(synthetic) + geom_point(aes(x=scaled.means,y=SD)) + xlim(0,100) + ylim(0,50)
ggplot(all) + geom_point(aes(x=consolidated,y=SD)) + xlim(0,100) + ylim(0,50)
?t.test
t.test(synthetic$scaled.means, all$consolidated)
t.test(synthetic$SD, all$SD)
data <- read.csv('~/tmp/private.csv')
str(data)
names(data)
names(data) <- c("sample","project","removed","added","common","private")
levels(data$sample)
?sort
order(data$common)
levels(data$common)[order]
levels(data$sample)[order(data$common)]
data$sample <- factor(data$sample, levels=levels(data$sample)[order(data$common)])
data$sample
data <- read.csv('~/tmp/private.csv')
names(data) <- c("sample","project","removed","added","common","private")
data$sample <- factor(data$sample, levels=levels(data$sample)[order(data$common)])
data$sample
library(reshape)
melted_data <- melt(data,id=c('sample','project'))
melted_data
ggplot(melted_data) + geom_bar(aes(x=sample,y=value,color=variable))
library(ggplot2)
ggplot(melted_data) + geom_bar(aes(x=sample,y=value,color=variable))
ggplot(melted_data) + geom_line(aes(x=sample,y=value,color=variable,group=variable))
ggplot(melted_data) + geom_line(aes(x=sample,y=value,color=variable,group=variable)) + scale_ylog()
ggplot(melted_data) + geom_line(aes(x=sample,y=value,color=variable,group=variable)) + scale_y_log10()
melted_nocommon <- melted[melted$variable != "common",]
melted_nocommon <- melted_data[melted$variable != "common",]
melted_nocommon <- melted_data[melted_data$variable != "common",]
ggplot(melted_nocommon) + geom_line(aes(x=sample,y=value,color=variable,group=variable)) + scale_y_log10()
ggplot(melted_nocommon) + geom_line(aes(x=sample,y=value,color=variable,group=variable))
melted_no97 <- melted_data[melted_data$sample != "97449717",]
ggplot(melted_no97) + geom_line(aes(x=sample,y=value,color=variable,group=variable))
melted_nocommon <- melted_data[melted_data$variable != "common" & melted_data$sample != "97449717",]
ggplot(melted_nocommon) + geom_line(aes(x=sample,y=value,color=variable,group=variable))
ggplot(melted_nocommon) + geom_line(aes(x=sample,y=value,color=variable,group=variable)) + scale_y_log10()
ggplot(melted_no97) + geom_bar(aes(x=sample,y=value,color=variable,group=variable))
ggplot(melted_nocommon) + geom_line(aes(x=sample,y=value,color=variable,group=variable)) + scale_y_log10()
ggplot(melted_nocommon) + geom_line(aes(x=sample,y=value,color=variable,group=variable)) + scale_y_log10() + ggtitle('Broad caller changes, all samples minus 97449717')
ggplot(melted_no97) + geom_bar(aes(x=sample,y=value,color=variable,group=variable))
ggplot(melted_no97) + geom_line(aes(x=sample,y=value,color=variable,group=variable))
melted_nocommon <- melted_data[melted_data$variable != "common",]
ggplot(melted_nocommon) + geom_line(aes(x=sample,y=value,color=variable,group=variable)) + scale_y_log10() + ggtitle('Broad caller changes, all samples minus 97449717')
ggplot(melted_nocommon) + geom_line(aes(x=sample,y=value,color=variable,group=variable)) + scale_y_log10() + ggtitle('Broad caller changes, all samples')
ggplot(melted_nocommon) + geom_line(aes(x=sample,y=value,color=variable,group=variable)) + scale_y_log10() + ggtitle('Broad caller changes, all samples minus 97449717')
ggplot(melted_no97) + geom_line(aes(x=sample,y=value,color=variable,group=variable))
setwd('~/Desktop/Spark-Chapel-TF-UMich-2016/')
library('slidify')
slidify('index.Rmd')
publish(user='ljdursi',repo='Spark-Chapel-TF-UMich-2016')
slidify('index.Rmd')
library(devtools)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
slidify('index.Rmd')
publish(user='ljdursi',repo='Spark-Chapel-TF-UMich-2016')
publish(user='ljdursi',repo='Spark-Chapel-TF-UMich-2016')
slidify('index.Rmd')
publish(user='ljdursi',repo='Spark-Chapel-TF-UMich-2016')
setwd('..')
author('Spark-Chapel-TF-UMich-2016')
publish(user='ljdursi',repo='Spark-Chapel-TF-UMich-2016')
publish(user='ljdursi',repo='Spark-Chapel-TF-UMich-2016',host='github')
setwd('~/Desktop/Spark-Chapel-TF-UMich-2016/assets/graphs//grad-student-vs-cpu')
cpus <- read.csv('cpu-prices.csv')
cpus <- read.csv('cpu-prices.csv')
cpus <- read.csv('cpu-prices.csv')
str(cpus)
nsf <- read.csv('nsf_gfrp.csv')
str(nsf)
years <- seq(1972,2015)
cpus$per_core <- cpus$Price_nominal_USD / cpus$cores
cores.lo <- loess(per_core ~ year, cpus)
cores.lo <- loess(per_core ~ Year, cpus)
gradstudent <- loess(fellowship ~ year, nsf)
gradstudent.lo <- loess(fellowship ~ year, nsf)
cpus <- read.csv('cpu-prices.csv')
cpus$per_core <- cpus$Price_nominal_USD / cpus$cores
cpus$per_core <- cpus$price_nominal_USD / cpus$cores
cores.lo <- loess(per_core ~ year, cpus)
year <- seq(1972,2015)
data <- data.frame(year=year)
data$gradstudent <- predict(gradstudent.lo, data)
data$per_core <- predict(cores.lo, data)
str(data)
data$cores_per_gradstudent <- data$gradstudent / data$per_Core
data$cores_per_gradstudent <- data$gradstudent / data$per_core
ggplot(data) + geom_line(aes(x=year, y=cores_per_gradstudent))
library(ggplot2)
ggplot(data) + geom_line(aes(x=year, y=cores_per_gradstudent))
ggplot(data) + geom_line(aes(x=year, y=cores_per_gradstudent)) + scale_y_log10()
ggplot(data, aes(x=year,y=cores_per_gradstudent)) + geom_line() + geom_point() + scale_y_log10() + xlabel('Cores per grad-student-year')
ggplot(data, aes(x=year,y=cores_per_gradstudent)) + geom_line() + geom_point() + scale_y_log10() + xlab('Cores per grad-student-year')
ggplot(data, aes(x=year,y=cores_per_gradstudent)) + geom_line() + geom_point() + ylab('Cores per grad-student-year')
str(cores)
str(cpu)
str(cpus
)
tail(cpus)
source('~/Desktop/Spark-Chapel-TF-UMich-2016/assets/graphs/grad-student-vs-cpu/makeplot.R')
ggplot(data, aes(x=year,y=cores_per_gradstudent)) + geom_line() + geom_point() +
ylab('Cores per grad-student-year') + xlab('Year') +
ggtitle('One year of NSF GFRP = How Many New Cores') + scale_y_log10()
cpus
cpus$price_nominal_USD
cpus$per_core
35000/87
35000/45
data$gradstudent
data$per_core
source('~/Desktop/Spark-Chapel-TF-UMich-2016/assets/graphs/grad-student-vs-cpu/makeplot.R')
nsf <- read.csv('nsf_gfrp.csv')
cpus <- read.csv('cpu-prices.csv')
cpus$per_core <- cpus$price_nominal_USD / cpus$cores
cores.lo <- loess(per_core ~ year, cpus)
gradstudent.lo <- loess(fellowship ~ year, nsf)
data <- data.frame(year=seq(1972,2015))
data$gradstudent <- predict(gradstudent.lo, data)
data$per_core <- predict(cores.lo, data)
tail(data)
data$cores_per_gradstudent <- data$gradstudent / data$per_core
tail(data)
ggplot(data, aes(x=year,y=cores_per_gradstudent)) + geom_line() + geom_point() +
ylab('Cores per grad-student-year') + xlab('Year') +
ggtitle('One year of NSF GFRP = How Many New Cores')
source('~/Desktop/Spark-Chapel-TF-UMich-2016/assets/graphs/grad-student-vs-cpu/makeplot.R')
ggplot(data, aes(x=year,y=cores_per_gradstudent)) + geom_line() + geom_point() +
ylab('Cores per grad-student-year') + xlab('Year') +
ggtitle('One year of NSF GFRP = How Many New Cores') + scale_y_log10()
slidify()
setwd('../../..')
pwd()
showwd()
slidify()
slidify('index.Rmd')
?publish
help(publish)
help(publish)
publish(user="ljdursi", repo="Spark-Chapel-TF-UMich-2016")
publish(user="ljdursi", repo="Spark-Chapel-TF-UMich-2016")
publish(user="ljdursi", repo="Spark-Chapel-TF-UMich-2016")
publish(user="ljdursi", repo="Spark-Chapel-TF-UMich-2016")
publish(user="ljdursi", repo="Spark-Chapel-TF-UMich-2016")
publish(user="ljdursi", repo="Spark-Chapel-TF-UMich-2016")
publish(user="ljdursi", repo="Spark-Chapel-TF-UMich-2016")
slidify('index.Rmd')
publish(user="ljdursi", repo="Spark-Chapel-TF-UMich-2016")
publish(user="ljdursi", repo="Spark-Chapel-TF-UMich-2016")
publish(user="ljdursi", repo="Spark-Chapel-TF-UMich-2016")
publish(user="ljdursi", repo="Spark-Chapel-TF-UMich-2016")
publish(user="ljdursi", repo="Spark-Chapel-TF-UMich-2016")
help(publish)
